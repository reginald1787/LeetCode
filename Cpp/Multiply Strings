class Solution {
public:
    string multiply(string num1, string num2);
    string add(string s1, string s2);
};

string Solution:: add(string s1, string s2){
    string ns = "";
    //reverse(s1.begin(), s1.end());
    //reverse(s2.begin(), s2.end());
    int carry = 0;

    for(int i=0;i<max(s1.size(),s2.size());i++){
        int num1 = i<s1.size()?s1[i]-'0':0;
        int num2 = i<s2.size()?s2[i]-'0':0;
        int val = num1+num2+carry;
        carry = val/10;
        ns+= to_string(val%10);
    }
    
    if(carry>0) ns+=to_string(carry);
    //reverse(ns.begin(), ns.end());
    return ns;
}

string Solution:: multiply(string num1, string num2) {

    if(num1.empty() || num2.empty()) return "";
    
    if(num1.size()<num2.size()) return multiply(num2, num1);
        
    if(num2.size()==1 && num2[0]=='0') return "0";

    string res;
    int carry;
    for(int i=num2.size()-1;i>=0;i--){
        string tmp = "";
        carry = 0;
        for(int j=num1.size()-1;j>=0;j--){
            int val = (num1[j]-'0') * (num2[i]-'0') + carry;
            carry = val/10;
            tmp+=to_string(val%10);
        }
        if(carry>0) tmp+=to_string(carry);
        tmp = string(num2.size()-1-i, '0') + tmp;
        res = add(res, tmp);
    }
    
    reverse(res.begin(),res.end());
    
    return res;
}

