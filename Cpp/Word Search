class Solution {
public:
    bool exist(vector<vector<char> > &board, string word) ;
};

bool exist_dfs(const vector<vector<char> > &board, vector<vector<bool>> &visited,
               const string & word, int i, int j, int level){
    if(level==word.size()) return true;
    if(i<0 || j<0 || i>=board.size() || j>=board[i].size()) return false;
    if(word[level]!=board[i][j]) return false;
    if(visited[i][j]) return false;
    visited[i][j] = true;
    
    bool ifexist =  exist_dfs(board, visited, word, i+1, j, level+1) ||
                    exist_dfs(board, visited, word, i, j+1, level+1) ||
                    exist_dfs(board, visited, word, i-1, j, level+1) ||
                    exist_dfs(board, visited, word, i, j-1, level+1);
    
    visited[i][j] =false;
    return ifexist;
}

bool Solution:: exist(vector<vector<char> > &board, string word) {
    vector<vector<bool>> visited (board.size(), vector<bool> (board[0].size(), false)) ;
    for(int i=0;i<board.size();i++){
        for(int j=0;j<board[i].size();j++){
            if(exist_dfs(board, visited, word, i, j, 0)){
                return true;
            }
        }
    }
    
    return false;

}

