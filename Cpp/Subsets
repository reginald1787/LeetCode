class Solution {
public:
    vector<vector<int> > subsets(vector<int> &S) ;
};

void subset_dfs(vector<vector<int>> &res, vector<int> &currset, vector<int> &S, int level){
    if(level==S.size()){
        res.push_back(currset);
        return;
    }
    
    currset.push_back(S[level]);
    subset_dfs(res, currset, S, level+1);
    currset.pop_back();
    subset_dfs(res, currset, S, level+1);

}

vector<vector<int> > Solution:: subsets(vector<int> &S) {
    vector<vector<int>> res;
    vector<int> currset;
    sort(S.begin(), S.end());
    subset_dfs(res, currset, S, 0);
    return res;
    
}
