/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public ListNode reverse(ListNode head) {
        if(head==null) return head;
        ListNode p = new ListNode(-1);
        ListNode q = head;
        p.next = q;
        while(q.next!=null){
            ListNode temp = p.next;
            p.next = q.next;
            q.next = p.next.next;
            p.next.next = temp;
        }
        return p.next;
    }
    
    public boolean compare(ListNode h1, ListNode h2){
        ListNode p1 = h1;
        ListNode p2 = h2;
        while(p1!=null && p2!=null && p1.val==p2.val){
            p1 = p1.next;
            p2 = p2.next;
        }
        if(p2==null) return true;
        else return false;
    }
    
    public boolean isPalindrome(ListNode head) {
        int n = 0;
        ListNode p = head;
        while(p!=null){
            p = p.next;
            n+=1;
        }
        if(n<2) return true;
        ListNode mid = head;
        for(int i=0;i<(n-1)/2;i++) mid = mid.next;
        ListNode right;
        if(n%2!=0) right = reverse(mid);
        else right = reverse(mid.next);
        return compare(head,right);

}
