public class Solution {
    
    private boolean check(char[][] matrix, int i, int j, int len){
        for(int p=i;p<=i+len;p++){
            if(matrix[p][j+len]=='0') return false;
        }
        for(int q=j;q<=j+len;q++){
            if(matrix[i+len][q]=='0') return false;
        }
        return true;
    }
    
    private int findMax(char[][] matrix, int i, int j){
        int area = 1;
        int m = matrix.length, n = matrix[0].length;
        
        for(int len = 1;len<Math.min(m-i,n-j);len++){
            if(check(matrix,i,j,len)) area = (len+1)*(len+1);
            else break;
        }
        return area;
    }
    
    public int maximalSquare(char[][] matrix) {
        int maxarea = 0;
        int m = matrix.length;
        if(m < 1) return 0;
        int n = matrix[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j]=='1') maxarea = Math.max(maxarea, findMax(matrix,i,j));
            }
        }
        return maxarea;
    }
}
