public class Solution {
    
    private boolean binarySearch(int [] A, int target){
        int n = A.length;
        int s=0,e=n-1;
        while(s<=e){
            int mid = (s+e)/2;
            if(A[mid]==target) return true;
            if(A[mid]<target) s = mid+1;
            else e = mid-1;
        }
        return false;
    }
    
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        if(m<1) return false;
        int n = matrix[0].length;
        boolean find = false;
        for(int i=0;i<m;i++){
            if(matrix[i][n-1]==target) return true;
            else if(matrix[i][n-1]>target) find |= binarySearch(matrix[i],target);
            if(find) return find;
        }
        return find;
    }
}
