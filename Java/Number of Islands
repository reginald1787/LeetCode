public class Solution {
    
    private void dfs(char[][] grid, int i, int j){
        int m = grid.length;
        int n = grid[0].length;
        if( (-1<i) && (i<m) && (-1<j) && (j<n) && (grid[i][j]=='1')){
            grid[i][j] = '+';
            dfs(grid, i+1,j);
            dfs(grid, i-1,j);
            dfs(grid, i,j+1);
            dfs(grid, i,j-1);
        }
    }
    
    
    public int numIslands(char[][] grid) {
      int m = grid.length;
      if(m<1) return 0;
      int n = grid[0].length;
      int num = 0;
      for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1') {
                    dfs(grid, i, j);
                    num++;
                }
            }
      }
      return num;
    }
}
